<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from example.urdf.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="example_robot">
  <link name="world"/>
  <ros2_control name="epick_driver_ros2_control" type="system">
    <hardware>
      <plugin>epick_driver/EpickGripperHardwareInterface</plugin>
      <!-- Serial connection parameters ////////////////////////////////// -->
      <param name="usb_port">/dev/ttyUSB0</param>
      <param name="baud_rate">115200</param>
      <param name="timeout">0.2</param>
      <!-- Gripper parameters /////////////////////////////////////////// -->
      <!-- Set use_dummy to true to connect to a dummy driver for testing purposes. -->
      <param name="use_dummy">False</param>
      <!-- The address of the gripper. -->
      <param name="slave_address">0x9</param>
      <!-- The gripper operation mode: AutomaticMode or AdvancedMode. -->
      <param name="mode">AdvancedMode</param>
      <!-- The following parameters are only required for the AdvancedMode. -->
      <param name="grip_max_vacuum_pressure">-60</param>
      <param name="grip_min_vacuum_pressure">-10</param>
      <param name="grip_timeout">25.0</param>
      <param name="release_timeout">2.0</param>
    </hardware>
    <gpio name="gripper">
      <!--
          Command interface to control the gripper:
          1.0 = grip
          0.0 = release
        -->
      <command_interface name="grip_cmd"/>
      <!--
          State interface that follows the value of the gripper/grip_cmd
          command interface:
          1.0 = successful grip
          0.0 = successful release
        -->
      <state_interface name="grip_cmd"/>
      <!--
          Return the object detection status:
          0.0 = unknown
          1.0 = object detected at minimum pressure
          2.0 = object detected at maximum pressure
          3.0 = no object detected
        -->
      <state_interface name="object_detection_status"/>
    </gpio>
    <!--
        This is optional configuration if you want to publish the state of the
        gripper as a joint state interface.
      -->
    <joint name="gripper">
      <!--
          State interface that follows the value of the gripper/grip_cmd
          command interface:
          1.0 = successful grip
          0.0 = successful release
        -->
      <state_interface name="position"/>
    </joint>
  </ros2_control>
  <!-- Base Link -->
  <link name="epick_base_link"/>
  <joint name="world_to_epick_base_link" type="fixed">
    <parent link="world"/>
    <child link="epick_base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <!-- EPick Body -->
  <link name="epick_body">
    <visual>
      <!-- Shifted backwards since the mesh origin is at the base end -->
      <origin rpy="0 0 0" xyz="0 0 -0.05115"/>
      <geometry>
        <mesh filename="package://epick_description/meshes/visual/epick_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="epick_gray">
        <color rgba="0.25 0.25 0.25 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1023" radius="0.044"/>
      </geometry>
    </collision>
  </link>
  <joint name="epick_base_link_to_epick_body" type="fixed">
    <parent link="epick_base_link"/>
    <child link="epick_body"/>
    <origin rpy="0 0 0" xyz="0 0 0.05115"/>
  </joint>
  <link name="epick_suction_cup">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.015" radius="0.012"/>
      </geometry>
      <material name="">
        <color rgba="0.25 0.25 0.25 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.015" radius="0.012"/>
      </geometry>
    </collision>
  </link>
  <joint name="epick_body_to_epick_suction_cup" type="fixed">
    <parent link="epick_body"/>
    <child link="epick_suction_cup"/>
    <origin rpy="0 0 0" xyz="0 0 0.05865"/>
  </joint>
  <!-- TIP Frame -->
  <!-- represents the outmost point of the collision geometry -->
  <link name="epick_tip"/>
  <joint name="epick_suction_cup_to_epick_tip" type="fixed">
    <parent link="epick_suction_cup"/>
    <child link="epick_tip"/>
    <origin rpy="0 0 0" xyz="0 0 0.0075"/>
  </joint>
  <!-- TCP Frame -->
  <!-- contact point to use for IK, Z-axis points "forwards", recessed by tcp_stroke_compensation -->
  <link name="epick_tcp"/>
  <joint name="epick_tip_to_epick_tcp" type="fixed">
    <parent link="epick_tip"/>
    <child link="epick_tcp"/>
    <origin rpy="0 0 0" xyz="0 0 -0.0"/>
  </joint>
  <!-- To allow MoveIt to actuate the gripper as part of a trajectory, we need to include a fake "joint" in the URDF corresponding to the Epick's vacuum state. -->
  <link name="epick_vacuum_state"/>
  <joint name="gripper" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="epick_tcp"/>
    <child link="epick_vacuum_state"/>
    <limit effort="30" lower="0.0" upper="1.0" velocity="1.0"/>
  </joint>
</robot>
